generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Ingredient {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name              String?
  unit              String?
  Pantry            Pantry[]
  Recipe_ingredient Recipe_ingredient[]
}

model Category {
  id     String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name   String?
  Menu   Menu[]
  Recipe Recipe[]
}

model Menu {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String?
  categoryId String    @db.Uuid
  category   Category  @relation(fields: [categoryId], references: [id])
  Comment    Comment[]
}

model User {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String?       @unique
  username    String?
  password    String?
  Comment     Comment[]
  Comment_fav Comment_fav[]
  Pantry      Pantry?
  Recipe_fav  Recipe_fav[]
}

model Recipe_ingredient {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  amount       Int
  ingredientId String     @db.Uuid
  recipeId     String     @db.Uuid
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  recipe       Recipe     @relation(fields: [recipeId], references: [id])
}

model Recipe {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name              String?
  cooking_time      String?
  categoryId        String              @db.Uuid
  category          Category            @relation(fields: [categoryId], references: [id])
  Method            Method[]
  Recipe_fav        Recipe_fav[]
  Recipe_ingredient Recipe_ingredient[]
}

model Method {
  id          String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?
  step        String
  recipeId    String  @db.Uuid
  recipe      Recipe  @relation(fields: [recipeId], references: [id])
}

model Pantry {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  amount       Int
  userId       String     @unique @db.Uuid
  ingredientId String     @db.Uuid
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  user         User       @relation(fields: [userId], references: [id])
}

model Recipe_fav {
  id       String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId   String @db.Uuid
  recipeId String @db.Uuid
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  user     User   @relation(fields: [userId], references: [id])

  @@index([userId], map: "Recipe_fav_userId_key")
}

model Comment_fav {
  id        String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  commentId String  @db.Uuid
  userId    String  @db.Uuid
  comment   Comment @relation(fields: [commentId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@index([userId], map: "Comment_fav_userId_key")
}

model Comment {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt   DateTime      @default(now())
  content     String?
  authorId    String        @db.Uuid
  menuId      String        @db.Uuid
  author      User          @relation(fields: [authorId], references: [id])
  menu        Menu          @relation(fields: [menuId], references: [id])
  Comment_fav Comment_fav[]
}
